name: CI/CD v2

on:
  workflow_dispatch:
     inputs:
       environment:
         description: 'Environment'
         default: 'development'
         required: true

env:
  DOCKER_IMAGE: ranskills/pipeline-test
  ARTIFACTS_NAME: build-artifacts
  ARTIFACTS_PATH: artifacts
  ISSUE_ASSIGNEES: ranskills
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  transpile:
    name: Transpile
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install yarn package manager
        run: npm install -g yarn

      # - name: Install dependencies
      #   run: yarn

      # - name: Transpile Typescript to JavaScript
      #   run: yarn compile

      - name: Transpile Typescript to JavaScript
        run: echo "${{ github.event.inputs.environment }}"

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: transpile

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install yarn package manager
        run: npm install -g yarn

      - name: Install dependencies
        run: yarn

      - name: Build binary
        run: |
          yarn compile && yarn build
          ls -lash

      - name: Test
        run: yarn test:unit

      # - name: Pass test 1
      #   run: exit 0

      # - name: Pass test 1
      #   run: exit 1

      # - name: Pass test 1
      #   run: exit 0

      - uses: ranskills/pipeline-test/.github/actions/issue-creator@develop
        if: ${{ failure() }}
        with:
          assignees: ${{ env.ISSUE_ASSIGNEES }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACTS_NAME }}
          path: |
            pipeline-test
            Dockerfile
          retention-days: 1

  development:
    if: ${{ github.event.inputs.environment == 'development' }}
    name: Development
    runs-on: ubuntu-latest
    environment: development
    needs: build
    env:
      MONGODB_URI: ${{ secrets.MONGO_URI }}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'

      - uses: vmware-tanzu/carvel-setup-action@v1
        with:
          only: ytt
      - run: |
          ytt version
          ytt -f config/config.yml \
            --data-value MONGODB_URI="${{ secrets.MONGO_URI }}" \
            > new-config.yml
          ls -la
          cat new-config.yml
      - run: cat new-config.yml
      - name: Upload Configuration File
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACTS_NAME }}
          path: |
            new-config.yml
          retention-days: 1
    
  staging:
    if: ${{ github.event.inputs.environment == 'staging' }}
    name: Staging
    runs-on: ubuntu-latest
    environment: staging
    needs: build

    steps:
      - run: "echo Hello, World!"

  production:
    if: ${{ github.event.inputs.environment == 'production' }}
    name: Production
    runs-on: ubuntu-latest
    environment: production
    needs: build

    steps:
      - run: "echo Hello, World!"